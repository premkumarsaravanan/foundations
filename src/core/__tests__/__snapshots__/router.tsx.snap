// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router should match a snapshot 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Suspense
    fallback={null}
  >
    <Switch>
      <Route
        exact={true}
        path="/login"
        render={[Function]}
      />
      <Route
        exact={true}
        path="/admin/login"
        render={[Function]}
      />
      <Route
        exact={true}
        path="/register"
        render={[Function]}
      />
      <withRouter(Connect(Component))
        path="/"
      >
        <Switch>
          <Connect(Component)
            allow="CLIENT"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            fetcher={true}
            path="/client/installed/:page"
          />
          <Connect(Component)
            allow="CLIENT"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            fetcher={true}
            path="/client/installed"
          />
          <Connect(Component)
            allow="CLIENT"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            fetcher={true}
            path="/client/apps/:page"
          />
          <Connect(Component)
            allow="CLIENT"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            fetcher={true}
            path="/client/apps"
          />
          <Connect(Component)
            allow="DEVELOPER"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            fetcher={true}
            path="/developer/apps"
          />
          <Connect(Component)
            allow="DEVELOPER"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            fetcher={true}
            path="/developer/apps/:page"
          />
          <Connect(Component)
            allow="DEVELOPER"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            path="/developer/submit-app"
          />
          <Connect(Component)
            allow="DEVELOPER"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            path="/developer/api-docs"
          />
          <Connect(Component)
            allow="ADMIN"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            fetcher={true}
            path="/admin"
          />
          <Connect(Component)
            allow="ADMIN"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            exact={true}
            fetcher={true}
            path="/admin/approvals"
          />
          <Connect(Component)
            allow="ADMIN"
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_ctor": [Function],
                "_result": null,
                "_status": -1,
              }
            }
            fetcher={true}
            path="/admin/approvals/:page"
          />
        </Switch>
      </withRouter(Connect(Component))>
      <Redirect
        to="/login"
      />
    </Switch>
  </Suspense>
</Router>
`;
